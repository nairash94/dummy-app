{"version":3,"sources":["components/card/card.component.js","components/card-lists/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","a","axios","get","data","console","log","userList","setState","fetchList","this","filteredMonsters","filter","e","toLowerCase","includes","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8UAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAMA,QAASA,UCJdO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SACba,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,iBCDGG,E,kDAEjB,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTR,SAAU,GACVS,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,QACA,uCAAE,8BAAAC,EAAA,sEACKC,IAAMC,IAAI,8CADf,OACPC,EADO,OAEbC,QAAQC,IAAIF,GACNG,EAAWH,EAAKA,KACtB,EAAKI,SAAS,CAACjB,SAAWgB,IAJb,2CAAF,qDAMfE,K,oBAIJ,WAAS,IAAD,OACJ,EAAiCC,KAAKX,MAA/BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXW,EAAmBpB,EAASqB,QAAO,SAAAC,GAErC,OADAR,QAAQC,IAAIO,GACLA,EAAEzB,KAAK0B,cAAcC,SAASf,EAAYc,kBAErD,OACI,sBAAK/B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAkB,GAAC,OAAI,EAAKL,SAAS,CAAER,YAAaa,EAAEG,OAAOC,WAClG,cAAC,EAAD,CAAU1B,SAAUoB,W,GA/BFO,aCMnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fcb283b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p> \r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map( monster => \r\n            <Card monster={monster} />\r\n        )}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n);","import React,{Component} from 'react';\r\nimport './App.css';\r\nimport { CardList } from './components/card-lists/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\nimport axios from 'axios';\r\n\r\nexport default class App  extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            monsters: [],\r\n            searchField:\"\"\r\n        };    \r\n    }\r\n\r\n    componentDidMount(){\r\n        const fetchList= async () => {\r\n            const data= await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            console.log(data);\r\n            const userList = data.data;\r\n            this.setState({monsters : userList});\r\n        }\r\n        fetchList();\r\n    }\r\n\r\n\r\n    render(){\r\n        const {monsters, searchField } = this.state;\r\n        const filteredMonsters = monsters.filter(e=>{\r\n            console.log(e);\r\n            return e.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return(\r\n            <div className='App'>\r\n                <h1> Monster Rolodex</h1>\r\n                <SearchBox placeholder=\"Search Monsters\" handleChange={e => this.setState({ searchField: e.target.value })} />\r\n                <CardList monsters={filteredMonsters} >\r\n                </CardList>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}